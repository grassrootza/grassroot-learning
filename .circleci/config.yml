version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
        auth:
            username: $DOCKER_USER
            password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          docker build -t terafirma .
          docker tag terafirma grassrootdocker/terafirma:$CIRCLE_BRANCH-$CIRCLE_SHA1
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push grassrootdocker/terafirma:$CIRCLE_BRANCH-$CIRCLE_SHA1

  deploy:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run: 
          name: deploy
          command: |
            sudo -H pip install awscli
            sudo -H pip install awsebcli
            echo "Deploying version $CIRCLE_BRANCH-$CIRCLE-SHA1"
            sed -i "s/<TAG>/$CIRCLE_BRANCH-$CIRCLE_SHA1/" ./Dockerrun.aws.json
            eb deploy learning-staging
            
  test:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - run: 
          command: |
            sudo -H pip install awscli
            sudo -H pip install awsebcli

  selenium_test:
    docker:
      - image: circleci/python:3.6.2-stretch-browsers
        environment:
          FLASK_CONFIG: testing
          TEST_DATABASE_URL: postgresql://ubuntu@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: |
            java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"
      - run:
          command: |
            . venv/bin/activate
            python selenium_tests.py
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      # - selenium_test:
      #     requires:
      #       - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: preprod